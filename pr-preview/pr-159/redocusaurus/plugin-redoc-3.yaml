openapi: 3.0.1
info:
  title: MapColonies Export Service
  description: Export Service for DEM, Raster, 3D
  version: 1.4.2
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /export-tasks:
    post:
      operationId: createExportTask
      summary: Create an export task
      tags:
        - Tasks
      requestBody:
        description: task details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/taskCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '509':
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /export-tasks/{id}:
    get:
      operationId: getTaskById
      summary: get task by id
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '509':
          description: Insufficient Storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    taskCreate:
      type: object
      required:
        - catalogRecordID
        - domain
        - artifactCRS
        - webhook
      properties:
        catalogRecordID:
          type: string
          format: uuid
        domain:
          type: string
          enum:
            - DEM
            - 3D
            - RASTER
        ROI:
          $ref: '#/components/schemas/FeatureCollection'
        artifactCRS:
          type: string
          enum:
            - '4326'
        description:
          type: string
        keywords:
          type: object
          description: task metadata in key-value pair
          example:
            foo: kuku
        parameters:
          type: object
          description: task parameters in key-value pair
          example:
            foo: kuku
        webhook:
          description: >-
            describe one or more relevant events to receive the data once event
            has been occurred
          type: array
          items:
            type: object
            required:
              - events
              - url
            properties:
              events:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: string
                  enum:
                    - TASK_COMPLETED
                    - TASK_FAILED
                  example: TASK_COMPLETED
              url:
                type: string
                example: https://webhook.com
      additionalProperties: false
    task:
      allOf:
        - $ref: '#/components/schemas/taskCreate'
        - type: object
          required:
            - id
            - status
            - createdAt
          properties:
            id:
              type: number
              format: int32
            estimatedSize:
              type: number
              format: int64
              description: the estimated size of the artifacts in bytes
            estimatedTime:
              type: number
              format: int64
              description: the estimated time of the export task
            status:
              type: string
              enum:
                - IN_PROGRESS
                - COMPLETED
                - ABORTED
                - PAUSED
                - FAILED
                - PENDING
                - EXPIRED
                - ARCHIVED
            errorReason:
              type: string
            progress:
              type: number
              minimum: 0
              maximum: 100
            artifacts:
              type: array
              items:
                $ref: '#/components/schemas/artifact'
            createdAt:
              type: string
              format: date-time
              description: creation task time - UTC format
            expiredAt:
              type: string
              format: date-time
              description: when the task will be expired at - UTC format
            finishedAt:
              type: string
              format: date-time
              description: when the task reached an end state - UTC format
    webhook:
      type: object
      required:
        - recordCatalogId
        - status
        - roi
        - expirationTime
        - jobId
      properties:
        status:
          type: string
          enum:
            - Completed
            - Failed
        expirationTime:
          type: string
          format: date-time
          description: UTC format
        recordCatalogId:
          type: string
          properties:
            dataName:
              type: string
            metadataName:
              type: string
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/artifact'
        links:
          type: object
          properties:
            dataURI:
              type: string
            metadataURI:
              type: string
        roi:
          $ref: '#/components/schemas/FeatureCollection'
        jobId:
          type: string
        errorReason:
          type: string
        description:
          type: string
    artifact:
      type: object
      description: GeoJson Feature Collection
      required:
        - name
        - type
      properties:
        type:
          anyOf:
            - $ref: '#/components/schemas/artifactRasterType'
            - $ref: '#/components/schemas/artifact3DType'
            - $ref: '#/components/schemas/artifactDEMType'
        name:
          type: string
        size:
          type: number
          format: int64
          example: 124215121
          description: size of the artifacts in bytes
        url:
          type: string
          format: uri
          example: https://download.com/file
    artifact3DType:
      type: string
      enum:
        - 3D_MODEL
        - METADATA
        - THUMBNAILS_SMALL
        - THUMBNAILS_MEDIUM
        - THUMBNAILS_LARGE
    artifactRasterType:
      type: string
      enum:
        - GPKG
        - LEGEND
        - METADATA
        - THUMBNAILS_SMALL
        - THUMBNAILS_MEDIUM
        - THUMBNAILS_LARGE
    artifactDEMType:
      type: string
      enum:
        - MODEL
        - METADATA
        - ROI
        - LEGEND
    FeatureCollection:
      type: object
      description: GeoJson Feature Collection
      required:
        - type
        - features
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      description: GeoJson Feature
      required:
        - type
        - properties
        - geometry
      properties:
        type:
          type: string
          enum:
            - Feature
        properties:
          type: object
          $ref: '#/components/schemas/FeatureProperties'
          discriminator:
            propertyName: maxResolutionDeg
        geometry:
          type: object
          nullable: true
          $ref: '#/components/schemas/Geometry'
    FeatureProperties:
      additionalProperties: {}
      description: define any additional properties fields for the feature
    Geometry:
      description: GeoJSon geometry
      type: object
      oneOf:
        - $ref: '#/components/schemas/Polygon'
        - $ref: '#/components/schemas/MultiPolygon'
    Polygon:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      allOf:
        - $ref: '#/components/schemas/GeometryBase'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point2D'
    MultiPolygon:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: '#/components/schemas/GeometryBase'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Point2D'
    GeometryBase:
      type: object
      description: GeoJSon geometry
      required:
        - type
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometry-objects
      properties:
        type:
          type: string
          enum:
            - Polygon
            - MultiPolygon
          description: the geometry type
    Point2D:
      type: array
      maxItems: 2
      minItems: 2
      items:
        type: number
    Point:
      type: object
      description: GeoJSon geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      allOf:
        - $ref: '#/components/schemas/GeometryBase'
        - properties:
            coordinates:
              $ref: '#/components/schemas/Point2D'
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
