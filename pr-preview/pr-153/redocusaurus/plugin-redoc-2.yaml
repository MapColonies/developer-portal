openapi: 3.0.1
info:
  version: 0.2.2
  title: Geocoding
  description: >-
    MapColonies Vector Geocoding api provides custom geodata search engine
    uniting multiple sources of data, query tiles, routes, items; Convertion
    functions - tile to/from WGS84 lat lng, WGS84 to/from US Army MGRS, WGS84
    to/from UTM.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: Location Name Based Search
  - name: Control
  - name: Convertions
paths:
  /search/query:
    get:
      operationId: GetSmartQuery
      summary: Search anything
      description: >-
        This is for general queries. the services will make a sophisticated
        guess.
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
        - name: query
          in: query
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 100
            title: Query
          description: Text to search
          allowReserved: true
        - $ref: '#/components/parameters/geo_context'
        - $ref: '#/components/parameters/geo_context_mode'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/disable_fuzziness'
      responses:
        '200':
          description: OK </br> Will return valid GeoJSON FeatureCollection
          headers:
            x-request-id:
              schema:
                type: string
                minLength: 1
                maxLength: 36
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericGeocodingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /search/location/query:
    get:
      operationId: locationGetQuery
      summary: Search engine
      description: >-
        Search for geo-data. It serves data from multiple diverse mapcolonies
        vector sources and partners.
      tags:
        - Location Name Based Search
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
        - name: query
          in: query
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 100
            title: Query
          description: Text to search
          allowReserved: true
        - name: source
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Source'
            title: Source
          description: |
            Sources to include (if not specified, all sources will be queried)
        - name: region
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Region'
            description: Regions to include (if not specified, all Regions will be queried)
            title: Region
          description: Regions to include (if not specified, all Regions will be queried)
        - $ref: '#/components/parameters/geo_context'
        - $ref: '#/components/parameters/geo_context_mode'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/disable_fuzziness'
      responses:
        '200':
          description: OK
          x-request-id:
            schema:
              type: string
              minLength: 1
              maxLength: 36
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/genericGeocodingResponse'
                  - type: object
                    required:
                      - type
                      - features
                    properties:
                      type:
                        type: string
                        enum:
                          - FeatureCollection
                      features:
                        type: array
                        items:
                          type: object
                          properties:
                            geometry:
                              oneOf:
                                - $ref: '#/components/schemas/Point'
                                - $ref: '#/components/schemas/Polygon'
                            properties:
                              type: object
                              properties:
                                placetype:
                                  type: string
                                sub_placetype:
                                  type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /search/location/regions:
    get:
      operationId: locationGetRegions
      tags:
        - Location Name Based Search
      summary: Get all available regions to filter on using location query
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
      responses:
        '200':
          description: All regions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /search/location/sources:
    get:
      operationId: locationGetSources
      tags:
        - Location Name Based Search
      summary: Get all available sources to filter on using location query
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
      responses:
        '200':
          description: All sources
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /search/control/tiles:
    get:
      operationId: controlGetTilesByQueryParams
      tags:
        - Control
      summary: Search tiles and sub tiles
      description: >-
        Tiles are consisted of 3 characters.</br>

        You can query and get results from 2 characters.   </br></br> If you
        define a tile (full name of it) you can query the sub tile associated
        with it. </br>

        You may also search tile based on 1 meter precision MGRS tile.
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
        - name: tile
          in: query
          description: Tile name
          schema:
            type: string
            minLength: 2
            maxLength: 3
        - name: sub_tile
          in: query
          description: Sub tile number
          schema:
            type: string
            pattern: ^[1-9][0-9]*$
        - name: mgrs
          description: 1 meters MGRS Tile
          example: 18SUJ2338907395
          in: query
          schema:
            type: string
        - $ref: '#/components/parameters/geo_context'
        - $ref: '#/components/parameters/geo_context_mode'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/disable_fuzziness'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tilesSchema'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /search/control/items:
    get:
      operationId: controlGetItemsByQueryParams
      tags:
        - Control
      summary: Search control items
      description: ''
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
        - name: command_name
          in: query
          description: Object command name of the item
          schema:
            type: string
          required: true
        - name: tile
          in: query
          description: The tile the item in it (full name of it)
          schema:
            type: string
            minLength: 3
            maxLength: 3
          required: false
        - name: sub_tile
          in: query
          description: The sub tile the item in it (required if tile is defined)
          schema:
            type: string
            pattern: ^[1-9][0-9]*$
          example: '66'
        - $ref: '#/components/parameters/geo_context'
        - $ref: '#/components/parameters/geo_context_mode'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/disable_fuzziness'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemsSchema'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /search/control/routes:
    get:
      operationId: controlGetRoutesByQueryParams
      tags:
        - Control
      summary: Search routes and report control points
      description: >-
        You can query and get control routes.   <br><br> If you define a route
        (full name of it) you can query the control points associated with it.
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
        - name: command_name
          in: query
          description: Object command name of the item
          schema:
            type: string
          required: true
        - name: control_point
          in: query
          description: The associated report control point of the route
          schema:
            type: string
            pattern: ^[1-9][0-9]*$
        - $ref: '#/components/parameters/geo_context'
        - $ref: '#/components/parameters/geo_context_mode'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/disable_fuzziness'
      responses:
        '200':
          description: OK (can be routesSchema or itemsSchema)
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/routesSchema'
                  - $ref: '#/components/schemas/itemsSchema'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /search/MGRS/tiles:
    get:
      operationId: getMGRSToGeom
      tags:
        - MGRS
      summary: Convert a MGRS string to Geometry in GeoJSON
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
        - name: tile
          in: query
          description: MGRS tile string
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mgrsTileSchema'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /lookup/coordinates:
    get:
      operationId: convertionGetLatLonToMgrs
      tags:
        - Convertions
      summary: Convert a WGS84 coordinate to US Army MGRS / Control Grid
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/xApiKey'
        - name: lat
          in: query
          description: Latitude of the coordinate
          schema:
            type: number
            minimum: -90
            maximum: 90
          required: true
        - name: lon
          in: query
          description: Longitude of the coordinate
          schema:
            type: number
            minimum: -180
            maximum: 180
          required: true
        - name: target_grid
          in: query
          description: Choose target grid
          schema:
            type: string
            enum:
              - control
              - MGRS
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - Feature
                  geocoding:
                    type: object
                    properties:
                      version:
                        type: string
                        example: 1.5.3
                      query:
                        type: object
                        properties:
                          lat:
                            type: number
                          lon:
                            type: number
                          target_grid:
                            type: string
                            example: control
                      response:
                        type: object
                        properties:
                          max_score:
                            type: number
                            example: 1
                          results_count:
                            type: number
                            example: 1
                          match_latency_ms:
                            type: number
                  bbox:
                    $ref: '#/components/schemas/BoundingBox'
                  geometry:
                    oneOf:
                      - $ref: '#/components/schemas/Point'
                      - $ref: '#/components/schemas/Polygon'
                  properties:
                    type: object
                    properties:
                      score:
                        type: number
                        example: 1
                      matches:
                        type: array
                        items:
                          type: object
                          required:
                            - source
                            - layer
                            - source_id
                          properties:
                            layer:
                              type: string
                              example: MGRS
                            source:
                              type: string
                              example: npm/mgrs
                            source_id:
                              type: array
                              items:
                                type: string
                      names:
                        type: object
                        properties:
                          default:
                            type: array
                            items:
                              type: string
                          display:
                            type: string
                          additionalProperty1:
                            type: object
                      additionalProperty1:
                        type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
components:
  responses:
    BadRequest:
      description: Invalid Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorSchema'
    Unauthorized:
      description: Please provide a valid token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorSchema'
    NotFound:
      description: Resource Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorSchema'
    Forbidden:
      description: Token is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorSchema'
    InternalError:
      description: Invalid Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorSchema'
  parameters:
    xApiKey:
      name: x-api-key
      in: header
      description: JWT authentication token provided by our team
      schema:
        type: string
    token:
      name: token
      in: query
      description: JWT authentication token provided by our team
      schema:
        type: string
    disable_fuzziness:
      name: disable_fuzziness
      in: query
      description: If an accurate result is obtained, only it will be returned
      schema:
        $ref: '#/components/schemas/disable_fuzziness'
    limit:
      name: limit
      in: query
      description: Maximum number of results
      schema:
        default: 5
        minimum: 1
        maximum: 15
        type: number
    geo_context:
      in: query
      name: geo_context
      description: |-
        Geo context of search.

        Supported queries:
        * bounding box:</br>
        {"bbox":[minX,minY,maxX,maxY]}
        * By point and radius (WGS84 and UTM are supported) </br>
        {"lon":value,"lat":value,"radius":value}<br>
        {"x":value,"y":value,"zone": number, "radius":value}
      schema:
        $ref: '#/components/schemas/geo_context'
    geo_context_mode:
      name: geo_context_mode
      in: query
      description: >-
        Choose whether geo_context query parameter will be a filter or a bias
        value
      schema:
        $ref: '#/components/schemas/geo_context_mode'
  schemas:
    errorSchema:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        status:
          type: number
    subTileSchema:
      type: object
      description: An object represnting a sub tile
      required:
        - tileName
        - subTileNumber
      properties:
        tileName:
          type: string
        subTileNumber:
          type: array
          items:
            type: number
            minimum: 0
            maximum: 100
          minItems: 3
          maxItems: 3
    tileSchema:
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          $ref: '#/components/schemas/Polygon'
        properties:
          type: object
          required:
            - TYPE
            - TILE_NAME
          properties:
            TYPE:
              type: string
            TILE_NAME:
              type: string
            SUB_TILE_ID:
              type: string
            SUB_TILE_NUMBER:
              type: array
              items:
                type: number
                minimum: 0
                maximum: 100
              minItems: 3
              maxItems: 3
    mgrsTileSchema:
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geocoding:
          type: object
          properties:
            version:
              type: string
              example: 1.5.3
            query:
              type: object
              properties:
                tile:
                  type: string
                  example: 18SUJ2339007393
            response:
              type: object
              properties:
                max_score:
                  type: number
                  example: 1
                results_count:
                  type: number
                  example: 1
                match_latency_ms:
                  type: number
        bbox:
          $ref: '#/components/schemas/BoundingBox'
        geometry:
          oneOf:
            - $ref: '#/components/schemas/Point'
            - $ref: '#/components/schemas/Polygon'
            - $ref: '#/components/schemas/MultiPolygon'
        properties:
          type: object
          properties:
            matches:
              type: array
              items:
                type: object
                properties:
                  layer:
                    type: string
                    example: MGRS
                  source:
                    type: string
                    example: npm/mgrs
                  source_id:
                    type: array
                    items:
                      type: string
            names:
              type: object
              properties:
                default:
                  type: array
                  items:
                    type: string
                display:
                  type: string
            score:
              type: number
              example: 1
    tilesSchema:
      allOf:
        - $ref: '#/components/schemas/genericGeocodingResponse'
        - type: object
          description: GeoJson feature collection representing a tile (Polygon)
          required:
            - type
            - features
          properties:
            type:
              type: string
              enum:
                - FeatureCollection
            features:
              type: array
              items:
                $ref: '#/components/schemas/tileSchema'
    itemsSchema:
      allOf:
        - $ref: '#/components/schemas/genericGeocodingResponse'
        - type: object
          description: GeoJson feature collection representing an item
          required:
            - type
            - features
          properties:
            type:
              type: string
              enum:
                - FeatureCollection
            features:
              type: array
              items:
                type: object
                properties:
                  geometry:
                    oneOf:
                      - $ref: '#/components/schemas/Point'
                      - $ref: '#/components/schemas/Polygon'
                  properties:
                    type: object
                    required:
                      - TYPE
                      - OBJECT_COMMAND_NAME
                      - ENTITY_HEB
                      - SUB_TILE_ID
                    properties:
                      TYPE:
                        type: string
                      OBJECT_COMMAND_NAME:
                        type: string
                      ENTITY_HEB:
                        type: string
                      TILE_NAME:
                        type: string
                      SUB_TILE_ID:
                        type: string
    routesSchema:
      allOf:
        - $ref: '#/components/schemas/genericGeocodingResponse'
        - type: object
          description: >-
            GeoJson feature collection representing a route (MultiLineString,
            LineString)
          required:
            - type
            - features
          properties:
            type:
              type: string
              enum:
                - FeatureCollection
            features:
              type: array
              items:
                type: object
                properties:
                  geometry:
                    oneOf:
                      - $ref: '#/components/schemas/LineString'
                      - $ref: '#/components/schemas/MultiLineString'
                  properties:
                    type: object
                    required:
                      - TYPE
                      - OBJECT_COMMAND_NAME
                      - ENTITY_HEB
                    properties:
                      TYPE:
                        type: string
                      OBJECT_COMMAND_NAME:
                        type: string
                      ENTITY_HEB:
                        type: string
                      SECTION:
                        type: string
    genericGeocodingResponse:
      type: object
      description: GeoJson feature collection representing an item
      required:
        - type
        - features
        - geocoding
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        geocoding:
          type: object
          required:
            - query
            - response
          properties:
            version:
              type: string
              pattern: ^\d{3}\.\d{3}\.\d{3}$
              example: 1.5.3
            query:
              type: object
              required:
                - text
                - limit
                - geo_context
                - disable_fuzziness
              properties:
                limit:
                  type: integer
                  minimum: 1
                  maximum: 10
                geo_context:
                  $ref: '#/components/schemas/geo_context'
                geo_context_mode:
                  $ref: '#/components/schemas/geo_context_mode'
                disable_fuzziness:
                  $ref: '#/components/schemas/disable_fuzziness'
            response:
              type: object
              required:
                - max_score
                - results_count
                - match_latency
              properties:
                max_score:
                  type: number
                  minimum: 0
                  maximum: 100
                results_count:
                  type: integer
                  minimum: 0
                  maximum: 10
                match_latency_ms:
                  type: integer
                  minimum: 0
                  maximum: 5000
        bbox:
          $ref: '#/components/schemas/BoundingBox'
        features:
          type: array
          items:
            type: object
            properties:
              geometry:
                $ref: '#/components/schemas/Geometry'
              properties:
                type: object
                additionalProperties: true
                required:
                  - id
                  - score
                  - matches
                  - regions
                  - display_name
                  - names
                properties:
                  score:
                    type: number
                    minimum: 0
                    maximum: 100
                  matches:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - source
                        - layer
                      properties:
                        layer:
                          type: string
                        source:
                          type: string
                        source_id:
                          type: array
                          items:
                            type: string
                  names:
                    type: object
                    required:
                      - display
                      - default
                    additionalProperties:
                      type: array
                      minItems: 1
                      maxItems: 100
                      items:
                        type: string
                    properties:
                      display:
                        type: string
                      default:
                        type: array
                        minItems: 1
                        items:
                          type: string
                  regions:
                    type: array
                    minItems: 1
                    maxItems: 100
                    items:
                      type: object
                      required:
                        - name
                        - sub_regions_names
                      properties:
                        name:
                          type: string
                        sub_regions_names:
                          type: array
                          minItems: 0
                          maxItems: 100
                          items:
                            type: string
                            minLength: 1
                            maxLength: 100
    Geometry:
      type: object
      description: Geojson geometry
      discriminator:
        propertyName: type
      required:
        - type
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometry-objects
      properties:
        type:
          type: string
          enum:
            - Point
            - LineString
            - Polygon
            - MultiPoint
            - MultiLineString
            - MultiPolygon
          description: the geometry type
    Point3D:
      type: array
      description: Point in 3D space
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      minItems: 2
      maxItems: 3
      items:
        type: number
    Point:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              $ref: '#/components/schemas/Point3D'
    LineString:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id3
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                $ref: '#/components/schemas/Point3D'
    Polygon:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point3D'
    MultiPoint:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id5
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                $ref: '#/components/schemas/Point3D'
    MultiLineString:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point3D'
    MultiPolygon:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Point3D'
    Source:
      type: string
      title: Source
    Region:
      type: string
      title: Region
    BoundingBox:
      type: array
      description: Bounding box array that contains [minX,minY,maxX,maxY]
      example: '[-74.382527,40.477003,-73.322346,40.916383]'
      items:
        type: number
      minLength: 4
      maxLength: 6
      nullable: true
    WGS84Circle:
      type: object
      properties:
        lat:
          type: number
        lon:
          type: number
        radius:
          type: number
    UTMCircle:
      type: object
      properties:
        x:
          type: number
        'y':
          type: number
        zone:
          type: number
          minimum: 1
          maximum: 60
        radius:
          type: number
    geo_context:
      anyOf:
        - type: object
          properties:
            bbox:
              $ref: '#/components/schemas/BoundingBox'
        - $ref: '#/components/schemas/WGS84Circle'
        - $ref: '#/components/schemas/UTMCircle'
    geo_context_mode:
      type: string
      enum:
        - filter
        - bias
    disable_fuzziness:
      type: boolean
      default: false
  securitySchemes:
    x-api-key:
      type: apiKey
      name: x-api-key
      in: header
    token:
      type: apiKey
      name: token
      in: query
    x-user-id:
      type: apiKey
      name: x-user-id
      in: header
